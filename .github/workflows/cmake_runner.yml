name: CMake Build Matrix

# Controls when the action will run. Triggers the workflow on push
on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Windows Latest MSVC",
            os: windows-latest,
            artifact: "windows_msvc",
            build_type: "Release",
            cc: "cl",
            cxx: "cl",
            environment_script: "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat",
            generator: "Visual Studio 17 2022"
          }
          - {
            name: "Ubuntu Latest GCC",
            os: ubuntu-latest,
            artifact: "ubuntu_gcc",
            build_type: "Release",
            cc: "gcc",
            cxx: "g++",
            generator: "Ninja"
          }
          - {
            name: "macOS Latest Clang",
            os: macos-latest,
            artifact: "macos_clang",
            build_type: "Release",
            cc: "clang",
            cxx: "clang++",
            generator: "Ninja"
          }

    steps:
      - uses: actions/checkout@v3

      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}

      - name: Install dependencies on Windows
        if: startsWith(matrix.config.os, 'windows')
        run: |
          choco install ninja cmake pip
          pip install conan
          ninja --version
          cmake --version
          pip --version
          conan --version
          cmd "${{ matrix.config.environment_script }}"

      - name: Install dependencies on Ubuntu
        if: startsWith(matrix.config.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build cmake pip
          pip install conan
          ninja --version
          cmake --version
          pip --version
          conan --version
          gcc --version

      - name: Install dependencies on MacOS
        if: startsWith(matrix.config.os, 'macos')
        run: |
          brew install cmake ninja conan
          ninja --version
          cmake --version
          conan --version

      - name: Install dependencies from conanfile
        run: |
          conan profile detect --force
          conan install . --output-folder=build --build=missing

      - name: Configure
        shell: bash
        run: | 
            cmake \
            -S . \
            -B build \
            -DCMAKE_TOOLCHAIN_FILE="conan_toolchain.cmake" \
            -DCMAKE_POLICY_DEFAULT_CMP0091="NEW" \
            -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
            -G "${{ matrix.config.generator }}"

      - name: Build
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: cmake --build . --config ${{ matrix.config.build_type }}

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{ matrix.config.build_type }} --verbose

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          path: ${{ github.workspace }}/build/bin
          name: ${{ matrix.config.artifact }}